---
import clsx from 'clsx';

import Badge from '~/components/badge.svelte';
import CodeBlockWrapper from '~/components/code-snippet/code-block-wrapper.svelte';
import Heading from '~/docs/components/heading.svelte';
import { Code } from 'astro:components';

interface Props {
  title?: string;
  slug?: string;
  description?: string;
  importCode?: string;
  exampleCode?: string;
  badges?: Array<string | null | undefined>;
}

const { title, slug, description, importCode, exampleCode, badges } = Astro.props,
  hasBadges = badges?.filter(Boolean).length;
---

<div class="mb-4 flex flex-col">
  {title ? <Heading title={title} {slug} level={3} /> : null}

  {
    hasBadges ? (
      <div class={clsx('not-prose -mt-2 flex items-center space-x-2')}>
        <Badge color="blue">
          <code class="text-xs">{badges[0]}</code>
        </Badge>
        {badges[1] && (
          <Badge color="green">
            <code class="text-xs">{badges[1]}</code>
          </Badge>
        )}
      </div>
    ) : null
  }

  {
    description && (
      <div class={clsx('-mb-4', !hasBadges && '-mt-8')}>
        <Fragment set:html={description} />
      </div>
    )
  }

  {
    importCode && (
      <CodeBlockWrapper class="not-prose w-full text-sm font-normal">
        <div class="flex flex-col">
          <Code
            code={importCode}
            lang="tsx"
            themes={{ light: 'github-light', dark: 'github-dark' }}
          />
          {exampleCode && (
            <div class="mt-6">
              <Code
                code={exampleCode}
                lang="tsx"
                themes={{ light: 'github-light', dark: 'github-dark' }}
              />
            </div>
          )}
        </div>
      </CodeBlockWrapper>
    )
  }
</div>

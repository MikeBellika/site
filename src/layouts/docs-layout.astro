---
// Docs Styles
import '../styles/prose.css';
import '../styles/docs.css';

import LibSelect from '~/docs/components/lib-select.svelte';
import type { CollectionEntry } from 'astro:content';

import Algolia from '../components/algolia/algolia.astro';
import { currentJSLibrary, getJSLibraryFromPathname, type JSLibrary } from '../stores/libraries';
import { kebabToTitleCase } from '../utils/string';
import AppLayout from './app-layout.astro';
import type { DocsPagination } from './nav/docs-sidebar-items';
import type { SidebarFeatureItem, SidebarItem } from './nav/sidebar-items';
import AnnouncementBar from './parts/announcement-bar.astro';
import NavbarDesktop from './parts/navbar/navbar-desktop.astro';
import NavbarMobile from './parts/navbar/navbar-mobile.astro';
import Pagination from './parts/pagination.astro';
import SidebarCategories from './parts/sidebar/sidebar-categories.astro';
import Sidebar from './parts/sidebar/sidebar.astro';
import TableOfContents from './parts/table-of-contents.astro';
import VidstackLib from './vidstack-lib.svelte';

export interface Props {
  jsLibrary: JSLibrary;
  pageTitle: string;
  page: CollectionEntry<'docs'>;
  pagination: DocsPagination;
  category?: string;
  categories?: SidebarFeatureItem[];
  sidebar: {
    id: string;
    root: string;
    items: SidebarItem[];
    deepMatch?: boolean;
  };
}

const { pathname } = Astro.url,
  { categories, category, page, pageTitle, pagination, sidebar } = Astro.props,
  { description } = page.data,
  { headings, Content } = await page.render(),
  jsLibrary = getJSLibraryFromPathname(pathname);

currentJSLibrary.set(jsLibrary);

const isPlayerPage = page.slug.startsWith('player'),
  titleBrand = isPlayerPage ? 'Vidstack Player' : 'Vidstack',
  titleFramework = jsLibrary === 'react' ? '' : ` (${kebabToTitleCase(jsLibrary)})`,
  titleCategory = category ? `${category}: ` : '',
  title = `${titleCategory}${pageTitle} | ${titleBrand}${titleFramework}`;

if (sidebar.deepMatch && !pagination.prev) {
  const items = sidebar.items.flatMap((item) => ('href' in item ? item : item.items)),
    activeItemIndex = items.findIndex(
      (item) =>
        'href' in item &&
        (item.href === pathname ||
          (pathname.split('/').at(-2) === item.href.split('/').pop() &&
            pathname.startsWith(item.href))),
    ),
    prevItem = items[activeItemIndex - 1],
    nextItem = items[activeItemIndex + 1];
  if (prevItem) pagination.prev = prevItem;
  if (nextItem) pagination.next = nextItem;
}
---

<AppLayout {title} {description} announcementBar>
  <VidstackLib client:idle />

  <AnnouncementBar href="https://old.vidstack.io" action="Go here" type="help">
    Looking for the old docs?
  </AnnouncementBar>

  <NavbarDesktop>
    <Algolia slot="center" />
  </NavbarDesktop>

  <NavbarMobile navItems={sidebar.items} noSocials>
    {
      categories && (
        <div class="mb-4 px-6" slot="popover-start">
          <LibSelect class="mb-6 w-full" client:visible />
          <SidebarCategories {categories} activeCategory={sidebar.root} />
        </div>
      )
    }

    <div class="mr-1" slot="end">
      <Algolia slot="end" />
    </div>
  </NavbarMobile>

  <!-- <Breadcrumbs {category} title={pageTitle} /> -->

  <div
    class="docs mx-auto flex h-screen w-full max-w-[var(--content-max-width)] items-stretch pt-[var(--content-top)]"
  >
    <Sidebar
      {categories}
      activeCategory={sidebar.root}
      items={sidebar.items}
      deepMatch={sidebar.deepMatch}
    />

    <main
      class="flex min-h-full max-w-full flex-1 flex-col px-6 pt-6 nav-lg:ml-[var(--sidebar-width)] 992:px-8 992:pt-8 1200:px-10"
    >
      <div class="markdown prose dark:prose-invert w-full max-w-[var(--article-max-width)] flex-1">
        <p class="category mb-2.5 text-[15px] font-semibold leading-6 text-inverse">
          {category}
        </p>

        <h1>{pageTitle}</h1>
        <p>{description}</p>

        <Content />
      </div>

      <Pagination prev={pagination.prev} next={pagination.next} />
    </main>

    <TableOfContents {headings} />
  </div>
</AppLayout>

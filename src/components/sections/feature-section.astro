---
import clsx from 'clsx';

import Visible from '../../actions/visible.svelte';
import FadeInWhenVisible from '../style/fade-in-when-visible.astro';
import TypeWriter from '../style/type-writer.svelte';
import TextGradient from '../text-gradient.svelte';

interface Props {
  title: string;
  subtitle?: string;
  align?: 'start' | 'center';
  noTextGradient?: boolean;
}

const { title, subtitle, align = 'center', noTextGradient = false } = Astro.props;
---

<FadeInWhenVisible>
  <section
    class={clsx(
      'flex w-full flex-col',
      'px-4 768:px-6',
      'max-w-[var(--content-max-width)] mx-auto',
      align === 'start' ? '992:flex-row 992:items-center 992:justify-start' : 'justify-center',
      !subtitle ? 'pb-32 992:pb-40' : 'py-20 992:py-28 1200:py-40',
    )}
  >
    <div
      class={clsx(
        'flex items-center flex-col text-center shrink-0',
        align === 'start' && '992:text-start 992:items-start',
        Astro.slots.has('content') && align === 'start' && '992:mr-10 992:mb-0',
        !subtitle ? (Astro.slots.has('cta') ? 'mb-10' : 'mb-4') : 'mb-16',
      )}
    >
      {
        Astro.slots.has('icon') && (
          <div
            class={clsx(
              'flex w-full justify-center text-inverse',
              align === 'start' && '992:justify-start',
            )}
          >
            <div class="relative h-10 w-10">
              <Visible
                class={clsx(
                  'absolute left-0 top-0 bg-inverse opacity-0 duration-500',
                  'data-[visible]:opacity-20 data-[visible]:dark:opacity-30',
                  'data-[visible]:translate-x-1 data-[visible]:translate-y-1',
                  'h-10 w-10 rounded-sm',
                  'transition-all',
                )}
                style="transition-delay: 750ms"
                once
                client:load
              />
              <div
                class={clsx(
                  'absolute left-0 top-0 h-10 w-10 rounded-sm bg-[var(--from-color)]',
                  'z-10 flex items-center justify-center opacity-80 shadow-md backdrop-blur-sm',
                )}
              />
              <div class="absolute left-1/2 top-1/2 z-20 h-[25px] w-[25px] -translate-x-1/2 -translate-y-1/2 text-body">
                <slot name="icon" />
              </div>
            </div>
          </div>
        )
      }
      <h1
        class={clsx(
          'font-semibold mt-6 mx-auto 576:max-w-none 992:mx-0 leading-tight',
          Astro.slots.has('subtitle')
            ? 'text-3xl 420:text-4xl 576:text-4xl '
            : 'text-4xl 576:text-5xl ',
        )}
      >
        {!noTextGradient ? <TextGradient>{title}</TextGradient> : title}
        {
          subtitle && (
            <>
              <br />
              <span
                class={clsx(
                  'inline-block text-soft',
                  Astro.slots.has('content')
                    ? 'mt-2 text-[2rem] 420:text-4xl 576:mt-3 992:text-5xl'
                    : 'mt-3',
                )}
              >
                <TypeWriter text={subtitle} speed={65} delay={200} caret client:visible />
              </span>
            </>
          )
        }
      </h1>

      {
        Astro.slots.has('description') && (
          <div class="mx-auto mt-4 max-w-md text-base text-soft 992:mx-0 992:max-w-lg 992:text-lg 1200:max-w-xl 1200:text-lg">
            <slot name="description" />
          </div>
        )
      }

      <div
        class={clsx(
          'flex justify-center w-full',
          align === 'start' && '992:justify-start',
          Astro.slots.has('description') ? 'mt-8' : Astro.slots.has('subtitle') ? 'mt-4' : 'mt-10',
        )}
      >
        <slot name="cta" />
      </div>
    </div>

    <slot name="content" />
  </section>
</FadeInWhenVisible>
